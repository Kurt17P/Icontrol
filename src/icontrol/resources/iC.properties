# This iC.property file contains properties that usually do not need to be
# changed but might need to be changed occasionally without having to re-compile
# the Instrument Control (iC) program.

# IMPORTANT NOTE
# When Netbeans is used to start the program, it is necessary to perform a
# Clean & Build to reflect changes made here


###########################
#                         #
#  Application / general  #
#                         #
###########################

# specify the default directory used to include sub-scripts, store user-defined 
# properties, and of Startup.py
# use $user.home$ to refer to the user's home directory
# use $dist.dir$ to refer to the distribution directory (also called user directory)
# use '/' to separate directories
iC.DefaultPath = $user.home$/iC


# specify the directory used to store the log files (for GPIB and general iC logs)
# use $user.home$ to refer to the user's home directory
# use $dist.dir$ to refer to the distribution directory (also called user directory)
# use '/' to separate directories
iC.DefaultLogPath = $user.home$/iC/iC log


# specify the default directory used to store the definitions of generic GPIB Instruments
# use $user.home$ to refer to the user's home directory
# use $dist.dir$ to refer to the distribution directory (also called user directory)
# use '/' to separate directories
iC.DefaultPathGenericInstruments = $user.home$/iC/Generic Instruments

# specify the default project directory
# this path is updated with the last project directory before iC quits, hence, 
# this field stores the last project directory for the next start
# use $user.home$ to refer to the user's home directory
iC.ProjectDir = $user.home$



# Chose the Logger Level
# SEVERE (highest value), WARNING, INFO, CONFIG, FINE, FINER, FINEST (lowest value), ALL, OFF
# recommended Logger levels are CONFIG (for regular use) or FINE (good for most
# debugging sessions)
iC.LogLevel = FINE

# Chose the Level for the Logger that logs all Communication traffic (GPIB, RS232, TMCTL, ...)
# SEVERE (highest value), WARNING, INFO, CONFIG, FINE, FINER, FINEST (lowest value), ALL, OFF
# recommended Logger levels are FINE or OFF
iC.CommLogLevel = FINE


# determine the default GPIB card
# can be 'NI' or 'Prologix' (without '')
iC.DefaultGPIBcontroller = NI

# determines whether or not the response of an *IDN? query
# should be compared with the Instrument Name Identifier defined below
# 1: enable the IDN check; every other value disables it
iC.EnableIDNcheck = 1


# stores the date when the What's New dialog was last viewed
# set to something like 991301 to never show the What's new Dialog
iC.LatestNews = 0


# determines if the last session should be loaded when iC starts
# If set to 1, iC tries to set the Project Directory and the File Name to the
# values the last time the Start Button was pressed, and also load the script
# which was loaded or saved last. Any other value leaves those fields to the 
# default values and does not load a script
iC.AutoLoadLastSession = 1

# determine if the scripts should be rendered in different colors
# loading might take a bit longer
# can be 1 or 0
iC.RenderScriptsInColor = 1




#################
#               #
#  Instruments  #
#               #
#################



# Agilent 4155
# ------------


# Maximum wait time for the Agilent 4155 when sending and querying via GPIB
# see Agilent4155.WaitAndSendViaGPIB()
# see Agilent4155.WaitAndQueryViaGPIB()
# specify an integer value in seconds or 0 to wait infinitely
# besides 0, a value of 100 might be an other reasonable choice
Agilent4155.MaxWaitTime = 0

# specify the String used in getInstrumentNameIdentifier
Agilent4155.InstrumentNameIdentifier = HEWLETT-PACKARD,415


# When a measurement gets interrrupted, not all data points contain reasonable 
# data but +9.91E+307
# If set to 1, data points where all variables are +9.91E+307 will not be saved
Agilent4155.TrunkateInvalidData = 1


# Agilent E4980A
# --------------

# specify the String used in getInstrumentNameIdentifier
AgilentE4980A.InstrumentNameIdentifier = Agilent Technologies,E4980A



# Lakeshore TC
# ------------

# specify the wait time after setting certain parameters in the Lakeshore
# It appears advisable to wait a short period (100ms) each time some parameter is set 
# on an (older?) Lakeshore controller. Specify this time in ms here.
LakeshoreTC.DefaultWaitTime = 100


# Lakeshore 332
# -------------

# specify the String used in getInstrumentNameIdentifier
Lakeshore332.InstrumentNameIdentifier = LSCI,MODEL332

# specify the characters appended to every message to mark end of transmission
Lakeshore332.TerminationCharacters = \r\n



# Lakeshore 340
# -------------

# specify the String used in getInstrumentNameIdentifier
Lakeshore340.InstrumentNameIdentifier = LSCI,MODEL340


### Parameters for the addCalibrationPoint script command ###

    # specify the User Curve for calibrating the first instrument; each successive
    # instrument uses the next higher curve number. 
    # must be in the interval [21, 60] for the last instrument to calibrate
    Lakeshore340.FirstCurveNumber = 50
 

    # select the interpolation type
    # can be none or Loess
    # be sure to never measure more than 200 data point without interpolation, as this
    # situation would cause an Exception which stops processing of the script
    Lakeshore340.InterpolationType = none

    # Parameters for the interpolating curve
    # LoessRobustnessIterations must be integer, the other values are double
    Lakeshore340.LoessBandwidth = 1
    Lakeshore340.LoessRobustnessIterations = 2
    Lakeshore340.LoessAccuracy = 1e-12

    # Temperature coefficient of the Thermistor
    # To program User Curves (via addCalibrationPoint) it is reqired from the 
    # Lakeshore 340 that the Sensor Units are decreasing with increasing point number
    # Any number >0 means positive TC
    Lakeshore340.TemperatureCoefficient = 1

    # number of readings used to determine the current temperature/sensor units
    # must be >0
    Lakeshore340.Average = 8

    # time between taking data points for averaging in ms
    Lakeshore340.AverageWaitTime = 250

#### end Parameters for the AddCalibrationPoint script command ###



# Lakeshore 625
# -------------

# specify the String used in getInstrumentNameIdentifier
Lakeshore625.InstrumentNameIdentifier = LSCI,MODEL625

# a mag. field within Epsilon of the Setpoint is accepted as to be at the Setpoint
Lakeshore625.Epsilon = 1e-3



# HP 4192
# -------

# Because the 4192 implements IEEE 488.1 only, hence, it does not support a
# '*IDN?' query, leave this string empty
# When this String is not specified here, iC_Properties.java will issue a
# warning message that this String is missing
HP4192.InstrumentNameIdentifier =



# Keithley 2600
# -------------

# specify the String used in getInstrumentNameIdentifier
# Keithley Instruments Inc., Model 2636A, 1349399, 2.1.6
Keithley2600.InstrumentNameIdentifier = Keithley Instruments Inc., Model 26

# Additional wait time in ms after the first voltage is applied in the 
# Script Commands SweepVmesureI and MeasureOPV
Keithley2600.SweepVmeasureI.WaitFirstVoltage = 400

# Parameters for the Loess Interpolation used in MeasureOPV (respectively in EvaluateOPV)
Keithley2600.MeasureOPV.LoessBandwidth = 0.01
Keithley2600.MeasureOPV.LoessRobustnessIterations = 2
Keithley2600.MeasureOPV.LoessAccuracy = 1e-15

# the voltage specified here (in V) is used to linearly interpolate around 0 and Voc
# to calculate Rshunt and Rseries in MeasureOPv respectively EvaluateOPV
Keithley2600.MeasureOPV.R_InterpoaltionRange = 0.025

# device area in cm^2 - used to calculate Power Conversion Efficiency
Keithley2600.MeasureOPV.DeviceArea = 0.04

# light intensity in W/cm^2 - used to calculate Power Conversion Efficiency
Keithley2600.MeasureOPV.LightIntensity = 1000.4e-4


# Keithley Switch
# ---------------

# specify the String used in getInstrumentNameIdentifier
Keithley7001.InstrumentNameIdentifier = KEITHLEY INSTRUMENTS INC.,MODEL 7001  

# Wait time in msec after opening/closing the switch. This is to allow enough 
# time for switching before a successive script command starts a process that 
# might rely on the switching being complete
Keithley7001.WaitTime = 250

# Eurotherm TC
# ------------

# default MODBUS address (can be 1-254)
EurothermTC.ModbusAddress = 1

# if 1, a LoopBack check is performed upon opening the RS232 port to verify the 
# presence of a Eurotherm controller. Any other value does not perform this test.
EurothermTC.CheckLoopBack = 1



# Yokogawa DL9000
# ---------------

# specify the String used in getInstrumentNameIdentifier
# an empty String means that the *IDN query is not performed. Becuase one has to 
# enter the Serial Number of the Instrument to open it, it makes not much sense to
# check if it's a DL9000.
YokogawaDL9000.InstrumentNameIdentifier =

# do the the potentially huge number of datapoints generated by the oscilloscope
# not all data points are plotted in the script command SaveWaveform. Note that
# all data points are saved in the text file.
# This number specifies how many data points are plotted
YokogawaDL9000.SaveWaveform.PlotSparsity = 2311

# defines whether or not the Time should be saved in column 1 by the
# Script Command SaveWaveform; can be 1 or 0.
YokogawaDL9000.SaveWaveform.IncludeTime = 1



# SRS DS345
# ---------

# specify the String used in getInstrumentNameIdentifier
# an empty String means that the *IDN query is not performed.
SRS_DS345.InstrumentNameIdentifier = StanfordResearchSystems,DS345

# specify the interpolation type used in setARBtoCELIV to find the values of 
# the photovoltage during Tdelay. Note that for Loess interpolation, the data
# points must not be too far apart. Always check the result.
# 1 ... Linear Interpolation
# 2 ... Loess Interpolation
SRS_DS345.setARBtoCELIV.InterpolationType = 2
SRS_DS345.setARBtoCELIV.LoessBandwidth = 0.1
SRS_DS345.setARBtoCELIV.LoessRobustnessIterations = 2
SRS_DS345.setARBtoCELIV.LoessAccuracy = 1e-12

# define whether or not the voltage read from the TPV file should be plotted
# together with the curve setARBtoCELIV calculated and which will be sent to the
# function generator
# 1 ... plot the data
# any other value don't show this data
SRS_DS345.setARBtoCELIV.PlotTPV_Data = 1



# SRS SR850
# ---------

# specify the String used in getInstrumentNameIdentifier
# an empty String means that the *IDN query is not performed.
SRS_DS345.InstrumentNameIdentifier = Stanford_Research_Systems,SR850

# specify the interpolation type used in GainCalibration and SweepF to find the values of 
# the gain / phase correction for different frequencies. Note that for Loess interpolation,
# the data points must not be too far apart. Always check the result.
# 1 ... Linear Interpolation
# 2 ... Loess Interpolation
SRS_SR850.GainCalibration.InterpolationType = 2
SRS_SR850.GainCalibration.LoessBandwidth = 0.1
SRS_SR850.GainCalibration.LoessRobustnessIterations = 2
SRS_SR850.GainCalibration.LoessAccuracy = 1e-12



# Cryomagnetics LM-500
# --------------------

# the time in sec waited after starting a Auto-Refill with the 
# script command Refill
LM500.WaitAfterRefill = 180


# NewInstrument
# -------------

# specify the String used in getInstrumentNameIdentifier
NewInstrument.InstrumentNameIdentifier = Love All-Serve All


############################
#                          #
#  Application / specific  #
#                          #
############################

# disable (0) or enable (1) debug mode
# can also be specified as command line argument as either iC.Debug 1 or iC.Debug 0
iC.Debug = 0

# specify the character encoding when converting Strings to byte[] and vice cersa
# do not change this parameter unless you know what you are doing
iC.CharacterEncoding = ISO-8859-1


# specify the name of the image file that used as a logo
# the image file has to be stored in the resource directory (src/icontrol/resources)
iC.LogoTiny = iC-Logo-iC-30.png
iC.LogoSmall = iC-Logo-1-Gear-80.png
iC.LogoMedium = iC-Logo-4-Gears-160.png


# choose the number of data points to be displayed in a chart
# This is an attempt to prevent the out-of-memory crash of the Virtual Machine
# a value of 0 indicates that all data points are kept
ChartXY.MaxDataPoints = 0



#################
#               #
# GPIB_NI class #
#               #
#################

# defines the Board Number (e.g. GPIB0) for all GPIB calls
# when NI/Agilent GPIB controllers are used
# this is only effective if the new JNA architecture and not JPIB is used
GPIB_NI.BoardNr = 0

# defines what happens at the end of a transmission
# Behavior after sending data (end of transmission).
# The last byte is sent with the EOI line asserted if eotmode is DABend.
# The last byte is sent without the EOI line asserted if eotmode
# is NULLend. If eotmode is NLend, a new line character ('\n') is sent with
# the EOI line asserted after the last byte of buffer. */
#
# NULLend= 0x00;  /* Do nothing at the end of a transfer.*/
# NLend=   0x01;  /* Send Newline (\n) with EOI after a transfer.  */
# DABend=  0x02;  /* Send EOI with the last data byte         */
GPIB_NI.EOT_Mode = 1

# The default size of the Receive Buffer
# up to this number of Bytes are requested to be sent via GPIB
# if an Instrument has more bytes in the transmit buffer the transmission
# will most likely be erroneous
GPIB_NI.ReceiveBufferSize = 150000


# Termination condition for the Receive operation
# If the termination condition is STOPend, the read is stopped when a byte is
# received with the EOI line asserted. Otherwise, the read is stopped when an
# 8-bit EOS character is detected.
# Can be STOPend = 0x0100 (=256) 
# or an 8-bit EOS character
# or 0 to disable EOS (default)
GPIB_NI.ReceiveTermination = 0

# The TimeOut value used when NI 488.1 functions are used
# The TimeOut value cannot be set (it's not implemented yet) when
# NI 488.2 functions are used.
# Possible values are: NONE=0; 10us=1; 30us=2; 100us=3; 300us=4; 1ms=5;
# 3ms=6; 10ms=7; 30ms=8; 100ms=9; 300ms=10; 1s=11; 3s=12; 10s=13;
# 30s=14; 100s=15; 300s=16; 1000s=17
GPIB_NI.TimeOut = 13

# Java Native Access searches this path when loading the native library
# This string can also be empty
# On Windows systems this path is passed to NativeLibrary.addSearchPath()
# On Mac, this string is added to the LibraryName, so it needs to end with '/'
# use $user.home$ to refer to the user's home directory
# use $dist.dir$ to refer to the distribution directory (also called user directory)
# use '/' to separate directories
GPIB_NI.AdditionalLibraryPathWin =
GPIB_NI.AdditionalLibraryPathMac = /Library/Frameworks/NI488.framework/

# on 32-bit Windows machines (including Win7) the NI driver can use gpib-32.dll
# on 64-bit Windows machines, NI4882.dll must be used, which is nominally backwards
# compatible with 32-bit machines as well
# use 1 for the 64 bit driver NI4882.dll or any other number to use gpib-32.dll
GPIB_NI.Use64BitDriver = 0



#######################
#                     #
# GPIB_Prologix class #
#                     #
#######################


# Java Native Access searches this path when loading the native library
# This string can also be empty
# use $user.home$ to refer to the user's home directory
# use '/' to separate directories
GPIB_Prologix.AdditionalLibraryPath =


# the product description string used to identify the Prologix GPIB-USB controller
# when multiple FTDI USB chips are connected
GPIB_Prologix.ProductDescription = Prologix GPIB-USB Controller

# The default size of the Receive Buffer
# up to this number of Bytes are requested to be sent via GPIB
# if an Instrument has more bytes in the transmit buffer the transmission
# will most likely be erroneous
GPIB_Prologix.ReceiveBufferSize = 150000

# specify the GPIB termination character(s) (++eos)
# When data from host is received over USB, all non-escaped LF, CR and ESC
# characters are removed and GPIB terminators, as specified by this constant,
# are appended before sending the data to instruments
# 0: Append CR+LF to instrument commands
# 1: Append CR to instrument commands
# 2: Append LF to instrument commands
# 3: Do not append anything to instrument commands
GPIB_Prologix.EOS = 0

# select if the configuration set by iC should be burnt into the flash memory
# 0: ++savecfg 0 is set, which does not save the configuration to flash
# 1: ++savecfg 1 is set, which saves the configuration to flash
GPIB_Prologix.Savecfg = 0


# specify the TimeOut value in milliseconds for read and write operations with the
# FTDI chip over the USB bus. This is not the GPIB TimeOut value.
# 50 is recommended. 35 worked in an initial test too - 30 did not work.
# higher values are safer, especially for slow USB connections
# after tests over the weekend, 75 is recommended
GPIB_Prologix.TimeOutUSB = 75

# specify the TimeOut value in milliseconds for read and write operations over
# the GPIB bus.
GPIB_Prologix.TimeOutGPIB = 3000

# specify the GPIB address the Prologix controller is set to after the connection
# has been closed. This allows to have multiple controllers attached at the same
# time. (see GPIB_Prologix.CloseController)
GPIB_Prologix.DeviceGPIBaddress = 31





#####################
#                   #
# GPIB_IOtech class #
#                   #
#####################

# the RS232 communication parameters used to access the IOtech GPIB controller
# port name, Baud Rate, number of data bits, number of stop bits, parity
# for instance COM1, 9600, 8, 1, none
GPIB_IOtech.PortName = COM1
GPIB_IOtech.BaudRate = 57600
GPIB_IOtech.NrDataBits = 8
GPIB_IOtech.NrStopBits = 1
GPIB_IOtech.Parity = none

# sets the time in seconds after which the IOtech declares a time-out event
# see manual page 4-68
GPIB_IOtech.TimeOut = 3

# enable debug mode when no serial port and no IOtech controller is present
# can be true or false
GPIB_IOtech.DebugNoRS232 = false


################
#              #
# RS232_Driver #
#              #
################

# Specify the time out value in ms
# Receiving data from the RS232 ends after no data was received for the 
# specified time
# for the IOtech GPIB controller 250ms is required (57600 baud)
RS232_Driver.TimeOut = 250


######################
#                    #
# TMCTL_Driver class #
#                    #
######################

# the answers queried via the TMCTL library are read in chunks with the size
# specified here. Note that all data is read regardless of this buffer size.
TMCTL_Driver.ReceiveBufferSize = 100000